import { App } from "../types";

export const apps: App[] = [
  {
    id: "signal",
    name: "Signal",
    protocol: "Signal Protocol",
    userBase: "40M+",
    userBaseNumber: 40000000,
    decentralizationLevel: "Low",
    decentralizationScore: 20,
    privacyRating: "Strong",
    businessModel: "Non-profit foundation",
    e2ee: "Strong",
    metadataProtection: "Partial",
    idRequirement: "Phone number required",
    serverDependence: "Centralized servers",
  },
  {
    id: "matrix",
    name: "Matrix/Element",
    protocol: "Matrix",
    userBase: "90M",
    userBaseNumber: 90000000,
    decentralizationLevel: "High",
    decentralizationScore: 75,
    privacyRating: "Good",
    businessModel: "Commercial + open-source",
    e2ee: "Optional (default)",
    metadataProtection: "Partial",
    idRequirement: "Username only",
    serverDependence: "Federated servers",
  },
  {
    id: "session",
    name: "Session",
    protocol: "Modified Signal Protocol",
    userBase: "~1-3M",
    userBaseNumber: 2000000,
    decentralizationLevel: "Very High",
    decentralizationScore: 85,
    privacyRating: "Strong",
    businessModel: "Non-profit foundation",
    e2ee: "Strong",
    metadataProtection: "Strong",
    idRequirement: "No personal info",
    serverDependence: "Decentralized routing",
  },
  {
    id: "briar",
    name: "Briar",
    protocol: "Briar protocol",
    userBase: "~100-500K",
    userBaseNumber: 300000,
    decentralizationLevel: "Extremely High",
    decentralizationScore: 95,
    privacyRating: "Strong",
    businessModel: "Open-source project",
    e2ee: "Strong",
    metadataProtection: "Strong",
    idRequirement: "No personal info",
    serverDependence: "No servers (P2P)",
  },
  {
    id: "xmtp",
    name: "XMTP",
    protocol: "XMTP",
    userBase: "~2-3M wallets",
    userBaseNumber: 2500000,
    decentralizationLevel: "High",
    decentralizationScore: 75,
    privacyRating: "Good",
    businessModel: "VC-funded protocol",
    e2ee: "Strong",
    metadataProtection: "Partial",
    idRequirement: "Wallet address",
    serverDependence: "Node network",
  },
  {
    id: "status",
    name: "Status",
    protocol: "Waku (from Whisper)",
    userBase: "~500K-1M",
    userBaseNumber: 750000,
    decentralizationLevel: "High",
    decentralizationScore: 75,
    privacyRating: "Good",
    businessModel: "Project with token",
    e2ee: "Strong",
    metadataProtection: "Partial",
    idRequirement: "ENS username",
    serverDependence: "P2P with Ethereum",
  },
  {
    id: "deltachat",
    name: "Delta Chat",
    protocol: "SMTP/IMAP",
    userBase: "~1M downloads",
    userBaseNumber: 1000000,
    decentralizationLevel: "Moderate",
    decentralizationScore: 50,
    privacyRating: "Good",
    businessModel: "Open-source project",
    e2ee: "Autocrypt",
    metadataProtection: "Limited",
    idRequirement: "Email address",
    serverDependence: "Email providers",
  },
  {
    id: "simplex",
    name: "SimpleX",
    protocol: "SimpleX",
    userBase: "~100K",
    userBaseNumber: 100000,
    decentralizationLevel: "High",
    decentralizationScore: 75,
    privacyRating: "Strong",
    businessModel: "Commercial + open source",
    e2ee: "Strong",
    metadataProtection: "Strong",
    idRequirement: "No identifiers",
    serverDependence: "Server queues",
  },
  {
    id: "jami",
    name: "Jami",
    protocol: "OpenDHT",
    userBase: "~500K",
    userBaseNumber: 500000,
    decentralizationLevel: "Very High",
    decentralizationScore: 85,
    privacyRating: "Strong",
    businessModel: "GNU project",
    e2ee: "Strong",
    metadataProtection: "Strong",
    idRequirement: "No personal info",
    serverDependence: "Pure P2P",
  },
];
